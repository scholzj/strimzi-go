//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2025 Jakub Scholz.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta2

import (
	v1 "k8s.io/api/core/v1"
	networkingv1 "k8s.io/api/networking/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclRule) DeepCopyInto(out *AclRule) {
	*out = *in
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(AclRuleResource)
		**out = **in
	}
	if in.Operations != nil {
		in, out := &in.Operations, &out.Operations
		*out = make([]AclOperation, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclRule.
func (in *AclRule) DeepCopy() *AclRule {
	if in == nil {
		return nil
	}
	out := new(AclRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclRuleResource) DeepCopyInto(out *AclRuleResource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclRuleResource.
func (in *AclRuleResource) DeepCopy() *AclRuleResource {
	if in == nil {
		return nil
	}
	out := new(AclRuleResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalVolume) DeepCopyInto(out *AdditionalVolume) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(v1.SecretVolumeSource)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(v1.ConfigMapVolumeSource)
		(*in).DeepCopyInto(*out)
	}
	if in.EmptyDir != nil {
		in, out := &in.EmptyDir, &out.EmptyDir
		*out = new(v1.EmptyDirVolumeSource)
		(*in).DeepCopyInto(*out)
	}
	if in.PersistentVolumeClaim != nil {
		in, out := &in.PersistentVolumeClaim, &out.PersistentVolumeClaim
		*out = new(v1.PersistentVolumeClaimVolumeSource)
		**out = **in
	}
	if in.Csi != nil {
		in, out := &in.Csi, &out.Csi
		*out = new(v1.CSIVolumeSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalVolume.
func (in *AdditionalVolume) DeepCopy() *AdditionalVolume {
	if in == nil {
		return nil
	}
	out := new(AdditionalVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlterOffsets) DeepCopyInto(out *AlterOffsets) {
	*out = *in
	if in.FromConfigMap != nil {
		in, out := &in.FromConfigMap, &out.FromConfigMap
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlterOffsets.
func (in *AlterOffsets) DeepCopy() *AlterOffsets {
	if in == nil {
		return nil
	}
	out := new(AlterOffsets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Artifact) DeepCopyInto(out *Artifact) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Artifact.
func (in *Artifact) DeepCopy() *Artifact {
	if in == nil {
		return nil
	}
	out := new(Artifact)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoRestart) DeepCopyInto(out *AutoRestart) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoRestart.
func (in *AutoRestart) DeepCopy() *AutoRestart {
	if in == nil {
		return nil
	}
	out := new(AutoRestart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoRestartStatus) DeepCopyInto(out *AutoRestartStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoRestartStatus.
func (in *AutoRestartStatus) DeepCopy() *AutoRestartStatus {
	if in == nil {
		return nil
	}
	out := new(AutoRestartStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokerAndVolumeIds) DeepCopyInto(out *BrokerAndVolumeIds) {
	*out = *in
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokerAndVolumeIds.
func (in *BrokerAndVolumeIds) DeepCopy() *BrokerAndVolumeIds {
	if in == nil {
		return nil
	}
	out := new(BrokerAndVolumeIds)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokerCapacity) DeepCopyInto(out *BrokerCapacity) {
	*out = *in
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]BrokerCapacityOverride, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokerCapacity.
func (in *BrokerCapacity) DeepCopy() *BrokerCapacity {
	if in == nil {
		return nil
	}
	out := new(BrokerCapacity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokerCapacityOverride) DeepCopyInto(out *BrokerCapacityOverride) {
	*out = *in
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokerCapacityOverride.
func (in *BrokerCapacityOverride) DeepCopy() *BrokerCapacityOverride {
	if in == nil {
		return nil
	}
	out := new(BrokerCapacityOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Build) DeepCopyInto(out *Build) {
	*out = *in
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = new(Output)
		(*in).DeepCopyInto(*out)
	}
	if in.Plugins != nil {
		in, out := &in.Plugins, &out.Plugins
		*out = make([]Plugin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Build.
func (in *Build) DeepCopy() *Build {
	if in == nil {
		return nil
	}
	out := new(Build)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildConfigTemplate) DeepCopyInto(out *BuildConfigTemplate) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(MetadataTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildConfigTemplate.
func (in *BuildConfigTemplate) DeepCopy() *BuildConfigTemplate {
	if in == nil {
		return nil
	}
	out := new(BuildConfigTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertAndKeySecretSource) DeepCopyInto(out *CertAndKeySecretSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertAndKeySecretSource.
func (in *CertAndKeySecretSource) DeepCopy() *CertAndKeySecretSource {
	if in == nil {
		return nil
	}
	out := new(CertAndKeySecretSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertSecretSource) DeepCopyInto(out *CertSecretSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertSecretSource.
func (in *CertSecretSource) DeepCopy() *CertSecretSource {
	if in == nil {
		return nil
	}
	out := new(CertSecretSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateAuthority) DeepCopyInto(out *CertificateAuthority) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateAuthority.
func (in *CertificateAuthority) DeepCopy() *CertificateAuthority {
	if in == nil {
		return nil
	}
	out := new(CertificateAuthority)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientTls) DeepCopyInto(out *ClientTls) {
	*out = *in
	if in.TrustedCertificates != nil {
		in, out := &in.TrustedCertificates, &out.TrustedCertificates
		*out = make([]CertSecretSource, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientTls.
func (in *ClientTls) DeepCopy() *ClientTls {
	if in == nil {
		return nil
	}
	out := new(ClientTls)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Condition) DeepCopyInto(out *Condition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Condition.
func (in *Condition) DeepCopy() *Condition {
	if in == nil {
		return nil
	}
	out := new(Condition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorPlugin) DeepCopyInto(out *ConnectorPlugin) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorPlugin.
func (in *ConnectorPlugin) DeepCopy() *ConnectorPlugin {
	if in == nil {
		return nil
	}
	out := new(ConnectorPlugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerEnvVar) DeepCopyInto(out *ContainerEnvVar) {
	*out = *in
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ContainerEnvVarSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerEnvVar.
func (in *ContainerEnvVar) DeepCopy() *ContainerEnvVar {
	if in == nil {
		return nil
	}
	out := new(ContainerEnvVar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerEnvVarSource) DeepCopyInto(out *ContainerEnvVarSource) {
	*out = *in
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(v1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMapKeyRef != nil {
		in, out := &in.ConfigMapKeyRef, &out.ConfigMapKeyRef
		*out = new(v1.ConfigMapKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerEnvVarSource.
func (in *ContainerEnvVarSource) DeepCopy() *ContainerEnvVarSource {
	if in == nil {
		return nil
	}
	out := new(ContainerEnvVarSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerTemplate) DeepCopyInto(out *ContainerTemplate) {
	*out = *in
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]ContainerEnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityContext != nil {
		in, out := &in.SecurityContext, &out.SecurityContext
		*out = new(v1.SecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerTemplate.
func (in *ContainerTemplate) DeepCopy() *ContainerTemplate {
	if in == nil {
		return nil
	}
	out := new(ContainerTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CruiseControlApiUsers) DeepCopyInto(out *CruiseControlApiUsers) {
	*out = *in
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(PasswordSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CruiseControlApiUsers.
func (in *CruiseControlApiUsers) DeepCopy() *CruiseControlApiUsers {
	if in == nil {
		return nil
	}
	out := new(CruiseControlApiUsers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CruiseControlSpec) DeepCopyInto(out *CruiseControlSpec) {
	*out = *in
	if in.TlsSidecar != nil {
		in, out := &in.TlsSidecar, &out.TlsSidecar
		*out = new(TlsSidecar)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(Logging)
		(*in).DeepCopyInto(*out)
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(CruiseControlTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BrokerCapacity != nil {
		in, out := &in.BrokerCapacity, &out.BrokerCapacity
		*out = new(BrokerCapacity)
		(*in).DeepCopyInto(*out)
	}
	in.Config.DeepCopyInto(&out.Config)
	if in.MetricsConfig != nil {
		in, out := &in.MetricsConfig, &out.MetricsConfig
		*out = new(MetricsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ApiUsers != nil {
		in, out := &in.ApiUsers, &out.ApiUsers
		*out = new(CruiseControlApiUsers)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoRebalance != nil {
		in, out := &in.AutoRebalance, &out.AutoRebalance
		*out = make([]KafkaAutoRebalanceConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CruiseControlSpec.
func (in *CruiseControlSpec) DeepCopy() *CruiseControlSpec {
	if in == nil {
		return nil
	}
	out := new(CruiseControlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CruiseControlTemplate) DeepCopyInto(out *CruiseControlTemplate) {
	*out = *in
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(DeploymentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ApiService != nil {
		in, out := &in.ApiService, &out.ApiService
		*out = new(InternalServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PodDisruptionBudget != nil {
		in, out := &in.PodDisruptionBudget, &out.PodDisruptionBudget
		*out = new(PodDisruptionBudgetTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.CruiseControlContainer != nil {
		in, out := &in.CruiseControlContainer, &out.CruiseControlContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.TlsSidecarContainer != nil {
		in, out := &in.TlsSidecarContainer, &out.TlsSidecarContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CruiseControlTemplate.
func (in *CruiseControlTemplate) DeepCopy() *CruiseControlTemplate {
	if in == nil {
		return nil
	}
	out := new(CruiseControlTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentTemplate) DeepCopyInto(out *DeploymentTemplate) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(MetadataTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentTemplate.
func (in *DeploymentTemplate) DeepCopy() *DeploymentTemplate {
	if in == nil {
		return nil
	}
	out := new(DeploymentTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityOperatorSpec) DeepCopyInto(out *EntityOperatorSpec) {
	*out = *in
	if in.TopicOperator != nil {
		in, out := &in.TopicOperator, &out.TopicOperator
		*out = new(EntityTopicOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.UserOperator != nil {
		in, out := &in.UserOperator, &out.UserOperator
		*out = new(EntityUserOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TlsSidecar != nil {
		in, out := &in.TlsSidecar, &out.TlsSidecar
		*out = new(TlsSidecar)
		(*in).DeepCopyInto(*out)
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(EntityOperatorTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityOperatorSpec.
func (in *EntityOperatorSpec) DeepCopy() *EntityOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(EntityOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityOperatorTemplate) DeepCopyInto(out *EntityOperatorTemplate) {
	*out = *in
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(DeploymentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicOperatorContainer != nil {
		in, out := &in.TopicOperatorContainer, &out.TopicOperatorContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.UserOperatorContainer != nil {
		in, out := &in.UserOperatorContainer, &out.UserOperatorContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.TlsSidecarContainer != nil {
		in, out := &in.TlsSidecarContainer, &out.TlsSidecarContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.EntityOperatorRole != nil {
		in, out := &in.EntityOperatorRole, &out.EntityOperatorRole
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.TopicOperatorRoleBinding != nil {
		in, out := &in.TopicOperatorRoleBinding, &out.TopicOperatorRoleBinding
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.UserOperatorRoleBinding != nil {
		in, out := &in.UserOperatorRoleBinding, &out.UserOperatorRoleBinding
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityOperatorTemplate.
func (in *EntityOperatorTemplate) DeepCopy() *EntityOperatorTemplate {
	if in == nil {
		return nil
	}
	out := new(EntityOperatorTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityTopicOperatorSpec) DeepCopyInto(out *EntityTopicOperatorSpec) {
	*out = *in
	if in.StartupProbe != nil {
		in, out := &in.StartupProbe, &out.StartupProbe
		*out = new(Probe)
		**out = **in
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(Logging)
		(*in).DeepCopyInto(*out)
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityTopicOperatorSpec.
func (in *EntityTopicOperatorSpec) DeepCopy() *EntityTopicOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(EntityTopicOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityUserOperatorSpec) DeepCopyInto(out *EntityUserOperatorSpec) {
	*out = *in
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(Logging)
		(*in).DeepCopyInto(*out)
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityUserOperatorSpec.
func (in *EntityUserOperatorSpec) DeepCopy() *EntityUserOperatorSpec {
	if in == nil {
		return nil
	}
	out := new(EntityUserOperatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfiguration) DeepCopyInto(out *ExternalConfiguration) {
	*out = *in
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]ExternalConfigurationEnv, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ExternalConfigurationVolumeSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfiguration.
func (in *ExternalConfiguration) DeepCopy() *ExternalConfiguration {
	if in == nil {
		return nil
	}
	out := new(ExternalConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfigurationEnv) DeepCopyInto(out *ExternalConfigurationEnv) {
	*out = *in
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ExternalConfigurationEnvVarSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfigurationEnv.
func (in *ExternalConfigurationEnv) DeepCopy() *ExternalConfigurationEnv {
	if in == nil {
		return nil
	}
	out := new(ExternalConfigurationEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfigurationEnvVarSource) DeepCopyInto(out *ExternalConfigurationEnvVarSource) {
	*out = *in
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(v1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMapKeyRef != nil {
		in, out := &in.ConfigMapKeyRef, &out.ConfigMapKeyRef
		*out = new(v1.ConfigMapKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfigurationEnvVarSource.
func (in *ExternalConfigurationEnvVarSource) DeepCopy() *ExternalConfigurationEnvVarSource {
	if in == nil {
		return nil
	}
	out := new(ExternalConfigurationEnvVarSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfigurationReference) DeepCopyInto(out *ExternalConfigurationReference) {
	*out = *in
	if in.ConfigMapKeyRef != nil {
		in, out := &in.ConfigMapKeyRef, &out.ConfigMapKeyRef
		*out = new(v1.ConfigMapKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfigurationReference.
func (in *ExternalConfigurationReference) DeepCopy() *ExternalConfigurationReference {
	if in == nil {
		return nil
	}
	out := new(ExternalConfigurationReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfigurationVolumeSource) DeepCopyInto(out *ExternalConfigurationVolumeSource) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(v1.SecretVolumeSource)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(v1.ConfigMapVolumeSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfigurationVolumeSource.
func (in *ExternalConfigurationVolumeSource) DeepCopy() *ExternalConfigurationVolumeSource {
	if in == nil {
		return nil
	}
	out := new(ExternalConfigurationVolumeSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericKafkaListener) DeepCopyInto(out *GenericKafkaListener) {
	*out = *in
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(KafkaListenerAuthentication)
		(*in).DeepCopyInto(*out)
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(GenericKafkaListenerConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkPolicyPeers != nil {
		in, out := &in.NetworkPolicyPeers, &out.NetworkPolicyPeers
		*out = make([]networkingv1.NetworkPolicyPeer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericKafkaListener.
func (in *GenericKafkaListener) DeepCopy() *GenericKafkaListener {
	if in == nil {
		return nil
	}
	out := new(GenericKafkaListener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericKafkaListenerConfiguration) DeepCopyInto(out *GenericKafkaListenerConfiguration) {
	*out = *in
	if in.BrokerCertChainAndKey != nil {
		in, out := &in.BrokerCertChainAndKey, &out.BrokerCertChainAndKey
		*out = new(CertAndKeySecretSource)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Bootstrap != nil {
		in, out := &in.Bootstrap, &out.Bootstrap
		*out = new(GenericKafkaListenerConfigurationBootstrap)
		(*in).DeepCopyInto(*out)
	}
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]GenericKafkaListenerConfigurationBroker, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpFamilies != nil {
		in, out := &in.IpFamilies, &out.IpFamilies
		*out = make([]IpFamily, len(*in))
		copy(*out, *in)
	}
	if in.Finalizers != nil {
		in, out := &in.Finalizers, &out.Finalizers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericKafkaListenerConfiguration.
func (in *GenericKafkaListenerConfiguration) DeepCopy() *GenericKafkaListenerConfiguration {
	if in == nil {
		return nil
	}
	out := new(GenericKafkaListenerConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericKafkaListenerConfigurationBootstrap) DeepCopyInto(out *GenericKafkaListenerConfigurationBootstrap) {
	*out = *in
	if in.AlternativeNames != nil {
		in, out := &in.AlternativeNames, &out.AlternativeNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExternalIPs != nil {
		in, out := &in.ExternalIPs, &out.ExternalIPs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericKafkaListenerConfigurationBootstrap.
func (in *GenericKafkaListenerConfigurationBootstrap) DeepCopy() *GenericKafkaListenerConfigurationBootstrap {
	if in == nil {
		return nil
	}
	out := new(GenericKafkaListenerConfigurationBootstrap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericKafkaListenerConfigurationBroker) DeepCopyInto(out *GenericKafkaListenerConfigurationBroker) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExternalIPs != nil {
		in, out := &in.ExternalIPs, &out.ExternalIPs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericKafkaListenerConfigurationBroker.
func (in *GenericKafkaListenerConfigurationBroker) DeepCopy() *GenericKafkaListenerConfigurationBroker {
	if in == nil {
		return nil
	}
	out := new(GenericKafkaListenerConfigurationBroker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericSecretSource) DeepCopyInto(out *GenericSecretSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericSecretSource.
func (in *GenericSecretSource) DeepCopy() *GenericSecretSource {
	if in == nil {
		return nil
	}
	out := new(GenericSecretSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalServiceTemplate) DeepCopyInto(out *InternalServiceTemplate) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(MetadataTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.IpFamilies != nil {
		in, out := &in.IpFamilies, &out.IpFamilies
		*out = make([]IpFamily, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalServiceTemplate.
func (in *InternalServiceTemplate) DeepCopy() *InternalServiceTemplate {
	if in == nil {
		return nil
	}
	out := new(InternalServiceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JmxTransOutputDefinitionTemplate) DeepCopyInto(out *JmxTransOutputDefinitionTemplate) {
	*out = *in
	if in.TypeNames != nil {
		in, out := &in.TypeNames, &out.TypeNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JmxTransOutputDefinitionTemplate.
func (in *JmxTransOutputDefinitionTemplate) DeepCopy() *JmxTransOutputDefinitionTemplate {
	if in == nil {
		return nil
	}
	out := new(JmxTransOutputDefinitionTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JmxTransQueryTemplate) DeepCopyInto(out *JmxTransQueryTemplate) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Outputs != nil {
		in, out := &in.Outputs, &out.Outputs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JmxTransQueryTemplate.
func (in *JmxTransQueryTemplate) DeepCopy() *JmxTransQueryTemplate {
	if in == nil {
		return nil
	}
	out := new(JmxTransQueryTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JmxTransSpec) DeepCopyInto(out *JmxTransSpec) {
	*out = *in
	if in.OutputDefinitions != nil {
		in, out := &in.OutputDefinitions, &out.OutputDefinitions
		*out = make([]JmxTransOutputDefinitionTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaQueries != nil {
		in, out := &in.KafkaQueries, &out.KafkaQueries
		*out = make([]JmxTransQueryTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(JmxTransTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JmxTransSpec.
func (in *JmxTransSpec) DeepCopy() *JmxTransSpec {
	if in == nil {
		return nil
	}
	out := new(JmxTransSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JmxTransTemplate) DeepCopyInto(out *JmxTransTemplate) {
	*out = *in
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(DeploymentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JmxTransTemplate.
func (in *JmxTransTemplate) DeepCopy() *JmxTransTemplate {
	if in == nil {
		return nil
	}
	out := new(JmxTransTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JvmOptions) DeepCopyInto(out *JvmOptions) {
	*out = *in
	if in.XX != nil {
		in, out := &in.XX, &out.XX
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.JavaSystemProperties != nil {
		in, out := &in.JavaSystemProperties, &out.JavaSystemProperties
		*out = make([]SystemProperty, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JvmOptions.
func (in *JvmOptions) DeepCopy() *JvmOptions {
	if in == nil {
		return nil
	}
	out := new(JvmOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kafka) DeepCopyInto(out *Kafka) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kafka.
func (in *Kafka) DeepCopy() *Kafka {
	if in == nil {
		return nil
	}
	out := new(Kafka)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Kafka) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaAuthorization) DeepCopyInto(out *KafkaAuthorization) {
	*out = *in
	if in.SuperUsers != nil {
		in, out := &in.SuperUsers, &out.SuperUsers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TlsTrustedCertificates != nil {
		in, out := &in.TlsTrustedCertificates, &out.TlsTrustedCertificates
		*out = make([]CertSecretSource, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaAuthorization.
func (in *KafkaAuthorization) DeepCopy() *KafkaAuthorization {
	if in == nil {
		return nil
	}
	out := new(KafkaAuthorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaAutoRebalanceConfiguration) DeepCopyInto(out *KafkaAutoRebalanceConfiguration) {
	*out = *in
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaAutoRebalanceConfiguration.
func (in *KafkaAutoRebalanceConfiguration) DeepCopy() *KafkaAutoRebalanceConfiguration {
	if in == nil {
		return nil
	}
	out := new(KafkaAutoRebalanceConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaAutoRebalanceStatus) DeepCopyInto(out *KafkaAutoRebalanceStatus) {
	*out = *in
	if in.Modes != nil {
		in, out := &in.Modes, &out.Modes
		*out = make([]KafkaAutoRebalanceStatusBrokers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaAutoRebalanceStatus.
func (in *KafkaAutoRebalanceStatus) DeepCopy() *KafkaAutoRebalanceStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaAutoRebalanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaAutoRebalanceStatusBrokers) DeepCopyInto(out *KafkaAutoRebalanceStatusBrokers) {
	*out = *in
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaAutoRebalanceStatusBrokers.
func (in *KafkaAutoRebalanceStatusBrokers) DeepCopy() *KafkaAutoRebalanceStatusBrokers {
	if in == nil {
		return nil
	}
	out := new(KafkaAutoRebalanceStatusBrokers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridge) DeepCopyInto(out *KafkaBridge) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaBridgeSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaBridgeStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridge.
func (in *KafkaBridge) DeepCopy() *KafkaBridge {
	if in == nil {
		return nil
	}
	out := new(KafkaBridge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaBridge) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeAdminClientSpec) DeepCopyInto(out *KafkaBridgeAdminClientSpec) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeAdminClientSpec.
func (in *KafkaBridgeAdminClientSpec) DeepCopy() *KafkaBridgeAdminClientSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeAdminClientSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeConsumerSpec) DeepCopyInto(out *KafkaBridgeConsumerSpec) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeConsumerSpec.
func (in *KafkaBridgeConsumerSpec) DeepCopy() *KafkaBridgeConsumerSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeConsumerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeHttpConfig) DeepCopyInto(out *KafkaBridgeHttpConfig) {
	*out = *in
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(KafkaBridgeHttpCors)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeHttpConfig.
func (in *KafkaBridgeHttpConfig) DeepCopy() *KafkaBridgeHttpConfig {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeHttpConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeHttpCors) DeepCopyInto(out *KafkaBridgeHttpCors) {
	*out = *in
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeHttpCors.
func (in *KafkaBridgeHttpCors) DeepCopy() *KafkaBridgeHttpCors {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeHttpCors)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeList) DeepCopyInto(out *KafkaBridgeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaBridge, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeList.
func (in *KafkaBridgeList) DeepCopy() *KafkaBridgeList {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaBridgeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeProducerSpec) DeepCopyInto(out *KafkaBridgeProducerSpec) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeProducerSpec.
func (in *KafkaBridgeProducerSpec) DeepCopy() *KafkaBridgeProducerSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeProducerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeSpec) DeepCopyInto(out *KafkaBridgeSpec) {
	*out = *in
	if in.Tls != nil {
		in, out := &in.Tls, &out.Tls
		*out = new(ClientTls)
		(*in).DeepCopyInto(*out)
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(KafkaClientAuthentication)
		(*in).DeepCopyInto(*out)
	}
	if in.Http != nil {
		in, out := &in.Http, &out.Http
		*out = new(KafkaBridgeHttpConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AdminClient != nil {
		in, out := &in.AdminClient, &out.AdminClient
		*out = new(KafkaBridgeAdminClientSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Consumer != nil {
		in, out := &in.Consumer, &out.Consumer
		*out = new(KafkaBridgeConsumerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Producer != nil {
		in, out := &in.Producer, &out.Producer
		*out = new(KafkaBridgeProducerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(Logging)
		(*in).DeepCopyInto(*out)
	}
	if in.Rack != nil {
		in, out := &in.Rack, &out.Rack
		*out = new(Rack)
		**out = **in
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(KafkaBridgeTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = new(Tracing)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeSpec.
func (in *KafkaBridgeSpec) DeepCopy() *KafkaBridgeSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeStatus) DeepCopyInto(out *KafkaBridgeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeStatus.
func (in *KafkaBridgeStatus) DeepCopy() *KafkaBridgeStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaBridgeTemplate) DeepCopyInto(out *KafkaBridgeTemplate) {
	*out = *in
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(DeploymentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ApiService != nil {
		in, out := &in.ApiService, &out.ApiService
		*out = new(InternalServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PodDisruptionBudget != nil {
		in, out := &in.PodDisruptionBudget, &out.PodDisruptionBudget
		*out = new(PodDisruptionBudgetTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BridgeContainer != nil {
		in, out := &in.BridgeContainer, &out.BridgeContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterRoleBinding != nil {
		in, out := &in.ClusterRoleBinding, &out.ClusterRoleBinding
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.InitContainer != nil {
		in, out := &in.InitContainer, &out.InitContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaBridgeTemplate.
func (in *KafkaBridgeTemplate) DeepCopy() *KafkaBridgeTemplate {
	if in == nil {
		return nil
	}
	out := new(KafkaBridgeTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClientAuthentication) DeepCopyInto(out *KafkaClientAuthentication) {
	*out = *in
	if in.TlsTrustedCertificates != nil {
		in, out := &in.TlsTrustedCertificates, &out.TlsTrustedCertificates
		*out = make([]CertSecretSource, len(*in))
		copy(*out, *in)
	}
	if in.SaslExtensions != nil {
		in, out := &in.SaslExtensions, &out.SaslExtensions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(GenericSecretSource)
		**out = **in
	}
	if in.CertificateAndKey != nil {
		in, out := &in.CertificateAndKey, &out.CertificateAndKey
		*out = new(CertAndKeySecretSource)
		**out = **in
	}
	if in.ClientAssertion != nil {
		in, out := &in.ClientAssertion, &out.ClientAssertion
		*out = new(GenericSecretSource)
		**out = **in
	}
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = new(GenericSecretSource)
		**out = **in
	}
	if in.PasswordSecret != nil {
		in, out := &in.PasswordSecret, &out.PasswordSecret
		*out = new(PasswordSecretSource)
		**out = **in
	}
	if in.RefreshToken != nil {
		in, out := &in.RefreshToken, &out.RefreshToken
		*out = new(GenericSecretSource)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClientAuthentication.
func (in *KafkaClientAuthentication) DeepCopy() *KafkaClientAuthentication {
	if in == nil {
		return nil
	}
	out := new(KafkaClientAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterSpec) DeepCopyInto(out *KafkaClusterSpec) {
	*out = *in
	if in.Listeners != nil {
		in, out := &in.Listeners, &out.Listeners
		*out = make([]GenericKafkaListener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Config.DeepCopyInto(&out.Config)
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(Storage)
		(*in).DeepCopyInto(*out)
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(KafkaAuthorization)
		(*in).DeepCopyInto(*out)
	}
	if in.Rack != nil {
		in, out := &in.Rack, &out.Rack
		*out = new(Rack)
		**out = **in
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.JmxOptions != nil {
		in, out := &in.JmxOptions, &out.JmxOptions
		*out = new(KafkaJmxOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.MetricsConfig != nil {
		in, out := &in.MetricsConfig, &out.MetricsConfig
		*out = new(MetricsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(Logging)
		(*in).DeepCopyInto(*out)
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(KafkaClusterTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.TieredStorage != nil {
		in, out := &in.TieredStorage, &out.TieredStorage
		*out = new(TieredStorage)
		(*in).DeepCopyInto(*out)
	}
	if in.Quotas != nil {
		in, out := &in.Quotas, &out.Quotas
		*out = new(QuotasPlugin)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterSpec.
func (in *KafkaClusterSpec) DeepCopy() *KafkaClusterSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterTemplate) DeepCopyInto(out *KafkaClusterTemplate) {
	*out = *in
	if in.Statefulset != nil {
		in, out := &in.Statefulset, &out.Statefulset
		*out = new(StatefulSetTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BootstrapService != nil {
		in, out := &in.BootstrapService, &out.BootstrapService
		*out = new(InternalServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BrokersService != nil {
		in, out := &in.BrokersService, &out.BrokersService
		*out = new(InternalServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalBootstrapService != nil {
		in, out := &in.ExternalBootstrapService, &out.ExternalBootstrapService
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PerPodService != nil {
		in, out := &in.PerPodService, &out.PerPodService
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalBootstrapRoute != nil {
		in, out := &in.ExternalBootstrapRoute, &out.ExternalBootstrapRoute
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PerPodRoute != nil {
		in, out := &in.PerPodRoute, &out.PerPodRoute
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalBootstrapIngress != nil {
		in, out := &in.ExternalBootstrapIngress, &out.ExternalBootstrapIngress
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PerPodIngress != nil {
		in, out := &in.PerPodIngress, &out.PerPodIngress
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PersistentVolumeClaim != nil {
		in, out := &in.PersistentVolumeClaim, &out.PersistentVolumeClaim
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PodDisruptionBudget != nil {
		in, out := &in.PodDisruptionBudget, &out.PodDisruptionBudget
		*out = new(PodDisruptionBudgetTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.KafkaContainer != nil {
		in, out := &in.KafkaContainer, &out.KafkaContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.InitContainer != nil {
		in, out := &in.InitContainer, &out.InitContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterCaCert != nil {
		in, out := &in.ClusterCaCert, &out.ClusterCaCert
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.JmxSecret != nil {
		in, out := &in.JmxSecret, &out.JmxSecret
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterRoleBinding != nil {
		in, out := &in.ClusterRoleBinding, &out.ClusterRoleBinding
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PodSet != nil {
		in, out := &in.PodSet, &out.PodSet
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterTemplate.
func (in *KafkaClusterTemplate) DeepCopy() *KafkaClusterTemplate {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnect) DeepCopyInto(out *KafkaConnect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaConnectSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaConnectStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnect.
func (in *KafkaConnect) DeepCopy() *KafkaConnect {
	if in == nil {
		return nil
	}
	out := new(KafkaConnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaConnect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectList) DeepCopyInto(out *KafkaConnectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaConnect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectList.
func (in *KafkaConnectList) DeepCopy() *KafkaConnectList {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaConnectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectSpec) DeepCopyInto(out *KafkaConnectSpec) {
	*out = *in
	if in.Tls != nil {
		in, out := &in.Tls, &out.Tls
		*out = new(ClientTls)
		(*in).DeepCopyInto(*out)
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(KafkaClientAuthentication)
		(*in).DeepCopyInto(*out)
	}
	in.Config.DeepCopyInto(&out.Config)
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.JmxOptions != nil {
		in, out := &in.JmxOptions, &out.JmxOptions
		*out = new(KafkaJmxOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(Logging)
		(*in).DeepCopyInto(*out)
	}
	if in.Rack != nil {
		in, out := &in.Rack, &out.Rack
		*out = new(Rack)
		**out = **in
	}
	if in.MetricsConfig != nil {
		in, out := &in.MetricsConfig, &out.MetricsConfig
		*out = new(MetricsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = new(Tracing)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(KafkaConnectTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalConfiguration != nil {
		in, out := &in.ExternalConfiguration, &out.ExternalConfiguration
		*out = new(ExternalConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Build != nil {
		in, out := &in.Build, &out.Build
		*out = new(Build)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectSpec.
func (in *KafkaConnectSpec) DeepCopy() *KafkaConnectSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectStatus) DeepCopyInto(out *KafkaConnectStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	if in.ConnectorPlugins != nil {
		in, out := &in.ConnectorPlugins, &out.ConnectorPlugins
		*out = make([]ConnectorPlugin, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectStatus.
func (in *KafkaConnectStatus) DeepCopy() *KafkaConnectStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectTemplate) DeepCopyInto(out *KafkaConnectTemplate) {
	*out = *in
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(DeploymentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PodSet != nil {
		in, out := &in.PodSet, &out.PodSet
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ApiService != nil {
		in, out := &in.ApiService, &out.ApiService
		*out = new(InternalServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.HeadlessService != nil {
		in, out := &in.HeadlessService, &out.HeadlessService
		*out = new(InternalServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectContainer != nil {
		in, out := &in.ConnectContainer, &out.ConnectContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.InitContainer != nil {
		in, out := &in.InitContainer, &out.InitContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PodDisruptionBudget != nil {
		in, out := &in.PodDisruptionBudget, &out.PodDisruptionBudget
		*out = new(PodDisruptionBudgetTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterRoleBinding != nil {
		in, out := &in.ClusterRoleBinding, &out.ClusterRoleBinding
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BuildPod != nil {
		in, out := &in.BuildPod, &out.BuildPod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BuildContainer != nil {
		in, out := &in.BuildContainer, &out.BuildContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BuildConfig != nil {
		in, out := &in.BuildConfig, &out.BuildConfig
		*out = new(BuildConfigTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BuildServiceAccount != nil {
		in, out := &in.BuildServiceAccount, &out.BuildServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.JmxSecret != nil {
		in, out := &in.JmxSecret, &out.JmxSecret
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectTemplate.
func (in *KafkaConnectTemplate) DeepCopy() *KafkaConnectTemplate {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnector) DeepCopyInto(out *KafkaConnector) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaConnectorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaConnectorStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnector.
func (in *KafkaConnector) DeepCopy() *KafkaConnector {
	if in == nil {
		return nil
	}
	out := new(KafkaConnector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaConnector) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectorList) DeepCopyInto(out *KafkaConnectorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaConnector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectorList.
func (in *KafkaConnectorList) DeepCopy() *KafkaConnectorList {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaConnectorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectorSpec) DeepCopyInto(out *KafkaConnectorSpec) {
	*out = *in
	if in.AutoRestart != nil {
		in, out := &in.AutoRestart, &out.AutoRestart
		*out = new(AutoRestart)
		**out = **in
	}
	in.Config.DeepCopyInto(&out.Config)
	if in.ListOffsets != nil {
		in, out := &in.ListOffsets, &out.ListOffsets
		*out = new(ListOffsets)
		(*in).DeepCopyInto(*out)
	}
	if in.AlterOffsets != nil {
		in, out := &in.AlterOffsets, &out.AlterOffsets
		*out = new(AlterOffsets)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectorSpec.
func (in *KafkaConnectorSpec) DeepCopy() *KafkaConnectorSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConnectorStatus) DeepCopyInto(out *KafkaConnectorStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	if in.AutoRestart != nil {
		in, out := &in.AutoRestart, &out.AutoRestart
		*out = new(AutoRestartStatus)
		**out = **in
	}
	in.ConnectorStatus.DeepCopyInto(&out.ConnectorStatus)
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConnectorStatus.
func (in *KafkaConnectorStatus) DeepCopy() *KafkaConnectorStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaConnectorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaExporterSpec) DeepCopyInto(out *KafkaExporterSpec) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(KafkaExporterTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaExporterSpec.
func (in *KafkaExporterSpec) DeepCopy() *KafkaExporterSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaExporterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaExporterTemplate) DeepCopyInto(out *KafkaExporterTemplate) {
	*out = *in
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(DeploymentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaExporterTemplate.
func (in *KafkaExporterTemplate) DeepCopy() *KafkaExporterTemplate {
	if in == nil {
		return nil
	}
	out := new(KafkaExporterTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaJmxAuthentication) DeepCopyInto(out *KafkaJmxAuthentication) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaJmxAuthentication.
func (in *KafkaJmxAuthentication) DeepCopy() *KafkaJmxAuthentication {
	if in == nil {
		return nil
	}
	out := new(KafkaJmxAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaJmxOptions) DeepCopyInto(out *KafkaJmxOptions) {
	*out = *in
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(KafkaJmxAuthentication)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaJmxOptions.
func (in *KafkaJmxOptions) DeepCopy() *KafkaJmxOptions {
	if in == nil {
		return nil
	}
	out := new(KafkaJmxOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaList) DeepCopyInto(out *KafkaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Kafka, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaList.
func (in *KafkaList) DeepCopy() *KafkaList {
	if in == nil {
		return nil
	}
	out := new(KafkaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaListenerAuthentication) DeepCopyInto(out *KafkaListenerAuthentication) {
	*out = *in
	in.ListenerConfig.DeepCopyInto(&out.ListenerConfig)
	if in.TlsTrustedCertificates != nil {
		in, out := &in.TlsTrustedCertificates, &out.TlsTrustedCertificates
		*out = make([]CertSecretSource, len(*in))
		copy(*out, *in)
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(GenericSecretSource)
		**out = **in
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]GenericSecretSource, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaListenerAuthentication.
func (in *KafkaListenerAuthentication) DeepCopy() *KafkaListenerAuthentication {
	if in == nil {
		return nil
	}
	out := new(KafkaListenerAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaMirrorMaker2) DeepCopyInto(out *KafkaMirrorMaker2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaMirrorMaker2Spec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaMirrorMaker2Status)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaMirrorMaker2.
func (in *KafkaMirrorMaker2) DeepCopy() *KafkaMirrorMaker2 {
	if in == nil {
		return nil
	}
	out := new(KafkaMirrorMaker2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaMirrorMaker2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaMirrorMaker2ClusterSpec) DeepCopyInto(out *KafkaMirrorMaker2ClusterSpec) {
	*out = *in
	if in.Tls != nil {
		in, out := &in.Tls, &out.Tls
		*out = new(ClientTls)
		(*in).DeepCopyInto(*out)
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(KafkaClientAuthentication)
		(*in).DeepCopyInto(*out)
	}
	in.Config.DeepCopyInto(&out.Config)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaMirrorMaker2ClusterSpec.
func (in *KafkaMirrorMaker2ClusterSpec) DeepCopy() *KafkaMirrorMaker2ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaMirrorMaker2ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaMirrorMaker2ConnectorSpec) DeepCopyInto(out *KafkaMirrorMaker2ConnectorSpec) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	if in.AutoRestart != nil {
		in, out := &in.AutoRestart, &out.AutoRestart
		*out = new(AutoRestart)
		**out = **in
	}
	if in.ListOffsets != nil {
		in, out := &in.ListOffsets, &out.ListOffsets
		*out = new(ListOffsets)
		(*in).DeepCopyInto(*out)
	}
	if in.AlterOffsets != nil {
		in, out := &in.AlterOffsets, &out.AlterOffsets
		*out = new(AlterOffsets)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaMirrorMaker2ConnectorSpec.
func (in *KafkaMirrorMaker2ConnectorSpec) DeepCopy() *KafkaMirrorMaker2ConnectorSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaMirrorMaker2ConnectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaMirrorMaker2List) DeepCopyInto(out *KafkaMirrorMaker2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaMirrorMaker2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaMirrorMaker2List.
func (in *KafkaMirrorMaker2List) DeepCopy() *KafkaMirrorMaker2List {
	if in == nil {
		return nil
	}
	out := new(KafkaMirrorMaker2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaMirrorMaker2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaMirrorMaker2MirrorSpec) DeepCopyInto(out *KafkaMirrorMaker2MirrorSpec) {
	*out = *in
	if in.SourceConnector != nil {
		in, out := &in.SourceConnector, &out.SourceConnector
		*out = new(KafkaMirrorMaker2ConnectorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.HeartbeatConnector != nil {
		in, out := &in.HeartbeatConnector, &out.HeartbeatConnector
		*out = new(KafkaMirrorMaker2ConnectorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.CheckpointConnector != nil {
		in, out := &in.CheckpointConnector, &out.CheckpointConnector
		*out = new(KafkaMirrorMaker2ConnectorSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaMirrorMaker2MirrorSpec.
func (in *KafkaMirrorMaker2MirrorSpec) DeepCopy() *KafkaMirrorMaker2MirrorSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaMirrorMaker2MirrorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaMirrorMaker2Spec) DeepCopyInto(out *KafkaMirrorMaker2Spec) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]KafkaMirrorMaker2ClusterSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mirrors != nil {
		in, out := &in.Mirrors, &out.Mirrors
		*out = make([]KafkaMirrorMaker2MirrorSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.JmxOptions != nil {
		in, out := &in.JmxOptions, &out.JmxOptions
		*out = new(KafkaJmxOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(Logging)
		(*in).DeepCopyInto(*out)
	}
	if in.Rack != nil {
		in, out := &in.Rack, &out.Rack
		*out = new(Rack)
		**out = **in
	}
	if in.MetricsConfig != nil {
		in, out := &in.MetricsConfig, &out.MetricsConfig
		*out = new(MetricsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = new(Tracing)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(KafkaConnectTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalConfiguration != nil {
		in, out := &in.ExternalConfiguration, &out.ExternalConfiguration
		*out = new(ExternalConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaMirrorMaker2Spec.
func (in *KafkaMirrorMaker2Spec) DeepCopy() *KafkaMirrorMaker2Spec {
	if in == nil {
		return nil
	}
	out := new(KafkaMirrorMaker2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaMirrorMaker2Status) DeepCopyInto(out *KafkaMirrorMaker2Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	if in.Connectors != nil {
		in, out := &in.Connectors, &out.Connectors
		*out = make([]Map, len(*in))
		copy(*out, *in)
	}
	if in.AutoRestartStatuses != nil {
		in, out := &in.AutoRestartStatuses, &out.AutoRestartStatuses
		*out = make([]AutoRestartStatus, len(*in))
		copy(*out, *in)
	}
	if in.ConnectorPlugins != nil {
		in, out := &in.ConnectorPlugins, &out.ConnectorPlugins
		*out = make([]ConnectorPlugin, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaMirrorMaker2Status.
func (in *KafkaMirrorMaker2Status) DeepCopy() *KafkaMirrorMaker2Status {
	if in == nil {
		return nil
	}
	out := new(KafkaMirrorMaker2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaNodePool) DeepCopyInto(out *KafkaNodePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaNodePoolSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaNodePoolStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaNodePool.
func (in *KafkaNodePool) DeepCopy() *KafkaNodePool {
	if in == nil {
		return nil
	}
	out := new(KafkaNodePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaNodePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaNodePoolList) DeepCopyInto(out *KafkaNodePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaNodePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaNodePoolList.
func (in *KafkaNodePoolList) DeepCopy() *KafkaNodePoolList {
	if in == nil {
		return nil
	}
	out := new(KafkaNodePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaNodePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaNodePoolSpec) DeepCopyInto(out *KafkaNodePoolSpec) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(Storage)
		(*in).DeepCopyInto(*out)
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]ProcessRoles, len(*in))
		copy(*out, *in)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(KafkaNodePoolTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaNodePoolSpec.
func (in *KafkaNodePoolSpec) DeepCopy() *KafkaNodePoolSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaNodePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaNodePoolStatus) DeepCopyInto(out *KafkaNodePoolStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	if in.NodeIds != nil {
		in, out := &in.NodeIds, &out.NodeIds
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]ProcessRoles, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaNodePoolStatus.
func (in *KafkaNodePoolStatus) DeepCopy() *KafkaNodePoolStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaNodePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaNodePoolTemplate) DeepCopyInto(out *KafkaNodePoolTemplate) {
	*out = *in
	if in.PodSet != nil {
		in, out := &in.PodSet, &out.PodSet
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PerPodService != nil {
		in, out := &in.PerPodService, &out.PerPodService
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PerPodRoute != nil {
		in, out := &in.PerPodRoute, &out.PerPodRoute
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PerPodIngress != nil {
		in, out := &in.PerPodIngress, &out.PerPodIngress
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PersistentVolumeClaim != nil {
		in, out := &in.PersistentVolumeClaim, &out.PersistentVolumeClaim
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.KafkaContainer != nil {
		in, out := &in.KafkaContainer, &out.KafkaContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.InitContainer != nil {
		in, out := &in.InitContainer, &out.InitContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaNodePoolTemplate.
func (in *KafkaNodePoolTemplate) DeepCopy() *KafkaNodePoolTemplate {
	if in == nil {
		return nil
	}
	out := new(KafkaNodePoolTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaRebalance) DeepCopyInto(out *KafkaRebalance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaRebalanceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaRebalanceStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaRebalance.
func (in *KafkaRebalance) DeepCopy() *KafkaRebalance {
	if in == nil {
		return nil
	}
	out := new(KafkaRebalance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaRebalance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaRebalanceList) DeepCopyInto(out *KafkaRebalanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaRebalance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaRebalanceList.
func (in *KafkaRebalanceList) DeepCopy() *KafkaRebalanceList {
	if in == nil {
		return nil
	}
	out := new(KafkaRebalanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaRebalanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaRebalanceSpec) DeepCopyInto(out *KafkaRebalanceSpec) {
	*out = *in
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.Goals != nil {
		in, out := &in.Goals, &out.Goals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ReplicaMovementStrategies != nil {
		in, out := &in.ReplicaMovementStrategies, &out.ReplicaMovementStrategies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MoveReplicasOffVolumes != nil {
		in, out := &in.MoveReplicasOffVolumes, &out.MoveReplicasOffVolumes
		*out = make([]BrokerAndVolumeIds, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaRebalanceSpec.
func (in *KafkaRebalanceSpec) DeepCopy() *KafkaRebalanceSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaRebalanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaRebalanceStatus) DeepCopyInto(out *KafkaRebalanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	in.OptimizationResult.DeepCopyInto(&out.OptimizationResult)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaRebalanceStatus.
func (in *KafkaRebalanceStatus) DeepCopy() *KafkaRebalanceStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaRebalanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSpec) DeepCopyInto(out *KafkaSpec) {
	*out = *in
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = new(KafkaClusterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Zookeeper != nil {
		in, out := &in.Zookeeper, &out.Zookeeper
		*out = new(ZookeeperClusterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.EntityOperator != nil {
		in, out := &in.EntityOperator, &out.EntityOperator
		*out = new(EntityOperatorSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterCa != nil {
		in, out := &in.ClusterCa, &out.ClusterCa
		*out = new(CertificateAuthority)
		**out = **in
	}
	if in.ClientsCa != nil {
		in, out := &in.ClientsCa, &out.ClientsCa
		*out = new(CertificateAuthority)
		**out = **in
	}
	if in.CruiseControl != nil {
		in, out := &in.CruiseControl, &out.CruiseControl
		*out = new(CruiseControlSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.JmxTrans != nil {
		in, out := &in.JmxTrans, &out.JmxTrans
		*out = new(JmxTransSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.KafkaExporter != nil {
		in, out := &in.KafkaExporter, &out.KafkaExporter
		*out = new(KafkaExporterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceTimeWindows != nil {
		in, out := &in.MaintenanceTimeWindows, &out.MaintenanceTimeWindows
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSpec.
func (in *KafkaSpec) DeepCopy() *KafkaSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaStatus) DeepCopyInto(out *KafkaStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	if in.Listeners != nil {
		in, out := &in.Listeners, &out.Listeners
		*out = make([]ListenerStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaNodePools != nil {
		in, out := &in.KafkaNodePools, &out.KafkaNodePools
		*out = make([]UsedNodePoolStatus, len(*in))
		copy(*out, *in)
	}
	if in.RegisteredNodeIds != nil {
		in, out := &in.RegisteredNodeIds, &out.RegisteredNodeIds
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.AutoRebalance != nil {
		in, out := &in.AutoRebalance, &out.AutoRebalance
		*out = new(KafkaAutoRebalanceStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaStatus.
func (in *KafkaStatus) DeepCopy() *KafkaStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTopic) DeepCopyInto(out *KafkaTopic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaTopicSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaTopicStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTopic.
func (in *KafkaTopic) DeepCopy() *KafkaTopic {
	if in == nil {
		return nil
	}
	out := new(KafkaTopic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaTopic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTopicList) DeepCopyInto(out *KafkaTopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaTopic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTopicList.
func (in *KafkaTopicList) DeepCopy() *KafkaTopicList {
	if in == nil {
		return nil
	}
	out := new(KafkaTopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaTopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTopicSpec) DeepCopyInto(out *KafkaTopicSpec) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTopicSpec.
func (in *KafkaTopicSpec) DeepCopy() *KafkaTopicSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaTopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTopicStatus) DeepCopyInto(out *KafkaTopicStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	if in.ReplicasChange != nil {
		in, out := &in.ReplicasChange, &out.ReplicasChange
		*out = new(ReplicasChangeStatus)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTopicStatus.
func (in *KafkaTopicStatus) DeepCopy() *KafkaTopicStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaTopicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaUser) DeepCopyInto(out *KafkaUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(KafkaUserSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(KafkaUserStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaUser.
func (in *KafkaUser) DeepCopy() *KafkaUser {
	if in == nil {
		return nil
	}
	out := new(KafkaUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaUserAuthentication) DeepCopyInto(out *KafkaUserAuthentication) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(Password)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaUserAuthentication.
func (in *KafkaUserAuthentication) DeepCopy() *KafkaUserAuthentication {
	if in == nil {
		return nil
	}
	out := new(KafkaUserAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaUserAuthorization) DeepCopyInto(out *KafkaUserAuthorization) {
	*out = *in
	if in.Acls != nil {
		in, out := &in.Acls, &out.Acls
		*out = make([]AclRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaUserAuthorization.
func (in *KafkaUserAuthorization) DeepCopy() *KafkaUserAuthorization {
	if in == nil {
		return nil
	}
	out := new(KafkaUserAuthorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaUserList) DeepCopyInto(out *KafkaUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KafkaUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaUserList.
func (in *KafkaUserList) DeepCopy() *KafkaUserList {
	if in == nil {
		return nil
	}
	out := new(KafkaUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KafkaUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaUserQuotas) DeepCopyInto(out *KafkaUserQuotas) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaUserQuotas.
func (in *KafkaUserQuotas) DeepCopy() *KafkaUserQuotas {
	if in == nil {
		return nil
	}
	out := new(KafkaUserQuotas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaUserSpec) DeepCopyInto(out *KafkaUserSpec) {
	*out = *in
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(KafkaUserAuthentication)
		(*in).DeepCopyInto(*out)
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(KafkaUserAuthorization)
		(*in).DeepCopyInto(*out)
	}
	if in.Quotas != nil {
		in, out := &in.Quotas, &out.Quotas
		*out = new(KafkaUserQuotas)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(KafkaUserTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaUserSpec.
func (in *KafkaUserSpec) DeepCopy() *KafkaUserSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaUserStatus) DeepCopyInto(out *KafkaUserStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaUserStatus.
func (in *KafkaUserStatus) DeepCopy() *KafkaUserStatus {
	if in == nil {
		return nil
	}
	out := new(KafkaUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaUserTemplate) DeepCopyInto(out *KafkaUserTemplate) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaUserTemplate.
func (in *KafkaUserTemplate) DeepCopy() *KafkaUserTemplate {
	if in == nil {
		return nil
	}
	out := new(KafkaUserTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListOffsets) DeepCopyInto(out *ListOffsets) {
	*out = *in
	if in.ToConfigMap != nil {
		in, out := &in.ToConfigMap, &out.ToConfigMap
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListOffsets.
func (in *ListOffsets) DeepCopy() *ListOffsets {
	if in == nil {
		return nil
	}
	out := new(ListOffsets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerAddress) DeepCopyInto(out *ListenerAddress) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerAddress.
func (in *ListenerAddress) DeepCopy() *ListenerAddress {
	if in == nil {
		return nil
	}
	out := new(ListenerAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerStatus) DeepCopyInto(out *ListenerStatus) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]ListenerAddress, len(*in))
		copy(*out, *in)
	}
	if in.Certificates != nil {
		in, out := &in.Certificates, &out.Certificates
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerStatus.
func (in *ListenerStatus) DeepCopy() *ListenerStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Logging) DeepCopyInto(out *Logging) {
	*out = *in
	if in.Loggers != nil {
		in, out := &in.Loggers, &out.Loggers
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ExternalConfigurationReference)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Logging.
func (in *Logging) DeepCopy() *Logging {
	if in == nil {
		return nil
	}
	out := new(Logging)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Map) DeepCopyInto(out *Map) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Map.
func (in *Map) DeepCopy() *Map {
	if in == nil {
		return nil
	}
	out := new(Map)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataTemplate) DeepCopyInto(out *MetadataTemplate) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataTemplate.
func (in *MetadataTemplate) DeepCopy() *MetadataTemplate {
	if in == nil {
		return nil
	}
	out := new(MetadataTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsConfig) DeepCopyInto(out *MetricsConfig) {
	*out = *in
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(ExternalConfigurationReference)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsConfig.
func (in *MetricsConfig) DeepCopy() *MetricsConfig {
	if in == nil {
		return nil
	}
	out := new(MetricsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Output) DeepCopyInto(out *Output) {
	*out = *in
	if in.AdditionalKanikoOptions != nil {
		in, out := &in.AdditionalKanikoOptions, &out.AdditionalKanikoOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Output.
func (in *Output) DeepCopy() *Output {
	if in == nil {
		return nil
	}
	out := new(Output)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Password) DeepCopyInto(out *Password) {
	*out = *in
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(PasswordSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Password.
func (in *Password) DeepCopy() *Password {
	if in == nil {
		return nil
	}
	out := new(Password)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordSecretSource) DeepCopyInto(out *PasswordSecretSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordSecretSource.
func (in *PasswordSecretSource) DeepCopy() *PasswordSecretSource {
	if in == nil {
		return nil
	}
	out := new(PasswordSecretSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordSource) DeepCopyInto(out *PasswordSource) {
	*out = *in
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(v1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordSource.
func (in *PasswordSource) DeepCopy() *PasswordSource {
	if in == nil {
		return nil
	}
	out := new(PasswordSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentClaimStorageOverride) DeepCopyInto(out *PersistentClaimStorageOverride) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentClaimStorageOverride.
func (in *PersistentClaimStorageOverride) DeepCopy() *PersistentClaimStorageOverride {
	if in == nil {
		return nil
	}
	out := new(PersistentClaimStorageOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Plugin) DeepCopyInto(out *Plugin) {
	*out = *in
	if in.Artifacts != nil {
		in, out := &in.Artifacts, &out.Artifacts
		*out = make([]Artifact, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Plugin.
func (in *Plugin) DeepCopy() *Plugin {
	if in == nil {
		return nil
	}
	out := new(Plugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodDisruptionBudgetTemplate) DeepCopyInto(out *PodDisruptionBudgetTemplate) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(MetadataTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodDisruptionBudgetTemplate.
func (in *PodDisruptionBudgetTemplate) DeepCopy() *PodDisruptionBudgetTemplate {
	if in == nil {
		return nil
	}
	out := new(PodDisruptionBudgetTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodTemplate) DeepCopyInto(out *PodTemplate) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(MetadataTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.SecurityContext != nil {
		in, out := &in.SecurityContext, &out.SecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]v1.TopologySpreadConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostAliases != nil {
		in, out := &in.HostAliases, &out.HostAliases
		*out = make([]v1.HostAlias, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DnsConfig != nil {
		in, out := &in.DnsConfig, &out.DnsConfig
		*out = new(v1.PodDNSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]AdditionalVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodTemplate.
func (in *PodTemplate) DeepCopy() *PodTemplate {
	if in == nil {
		return nil
	}
	out := new(PodTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Probe) DeepCopyInto(out *Probe) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Probe.
func (in *Probe) DeepCopy() *Probe {
	if in == nil {
		return nil
	}
	out := new(Probe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotasPlugin) DeepCopyInto(out *QuotasPlugin) {
	*out = *in
	if in.ExcludedPrincipals != nil {
		in, out := &in.ExcludedPrincipals, &out.ExcludedPrincipals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotasPlugin.
func (in *QuotasPlugin) DeepCopy() *QuotasPlugin {
	if in == nil {
		return nil
	}
	out := new(QuotasPlugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rack) DeepCopyInto(out *Rack) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rack.
func (in *Rack) DeepCopy() *Rack {
	if in == nil {
		return nil
	}
	out := new(Rack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteStorageManager) DeepCopyInto(out *RemoteStorageManager) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteStorageManager.
func (in *RemoteStorageManager) DeepCopy() *RemoteStorageManager {
	if in == nil {
		return nil
	}
	out := new(RemoteStorageManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicasChangeStatus) DeepCopyInto(out *ReplicasChangeStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicasChangeStatus.
func (in *ReplicasChangeStatus) DeepCopy() *ReplicasChangeStatus {
	if in == nil {
		return nil
	}
	out := new(ReplicasChangeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceTemplate) DeepCopyInto(out *ResourceTemplate) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(MetadataTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceTemplate.
func (in *ResourceTemplate) DeepCopy() *ResourceTemplate {
	if in == nil {
		return nil
	}
	out := new(ResourceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleVolumeStorage) DeepCopyInto(out *SingleVolumeStorage) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]PersistentClaimStorageOverride, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleVolumeStorage.
func (in *SingleVolumeStorage) DeepCopy() *SingleVolumeStorage {
	if in == nil {
		return nil
	}
	out := new(SingleVolumeStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulSetTemplate) DeepCopyInto(out *StatefulSetTemplate) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(MetadataTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulSetTemplate.
func (in *StatefulSetTemplate) DeepCopy() *StatefulSetTemplate {
	if in == nil {
		return nil
	}
	out := new(StatefulSetTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Storage) DeepCopyInto(out *Storage) {
	*out = *in
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]SingleVolumeStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]PersistentClaimStorageOverride, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Storage.
func (in *Storage) DeepCopy() *Storage {
	if in == nil {
		return nil
	}
	out := new(Storage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemProperty) DeepCopyInto(out *SystemProperty) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemProperty.
func (in *SystemProperty) DeepCopy() *SystemProperty {
	if in == nil {
		return nil
	}
	out := new(SystemProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TieredStorage) DeepCopyInto(out *TieredStorage) {
	*out = *in
	if in.RemoteStorageManager != nil {
		in, out := &in.RemoteStorageManager, &out.RemoteStorageManager
		*out = new(RemoteStorageManager)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TieredStorage.
func (in *TieredStorage) DeepCopy() *TieredStorage {
	if in == nil {
		return nil
	}
	out := new(TieredStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TlsSidecar) DeepCopyInto(out *TlsSidecar) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TlsSidecar.
func (in *TlsSidecar) DeepCopy() *TlsSidecar {
	if in == nil {
		return nil
	}
	out := new(TlsSidecar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tracing) DeepCopyInto(out *Tracing) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tracing.
func (in *Tracing) DeepCopy() *Tracing {
	if in == nil {
		return nil
	}
	out := new(Tracing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsedNodePoolStatus) DeepCopyInto(out *UsedNodePoolStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsedNodePoolStatus.
func (in *UsedNodePoolStatus) DeepCopy() *UsedNodePoolStatus {
	if in == nil {
		return nil
	}
	out := new(UsedNodePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperClusterSpec) DeepCopyInto(out *ZookeeperClusterSpec) {
	*out = *in
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(SingleVolumeStorage)
		(*in).DeepCopyInto(*out)
	}
	in.Config.DeepCopyInto(&out.Config)
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(Probe)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(JvmOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.JmxOptions != nil {
		in, out := &in.JmxOptions, &out.JmxOptions
		*out = new(KafkaJmxOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.MetricsConfig != nil {
		in, out := &in.MetricsConfig, &out.MetricsConfig
		*out = new(MetricsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(Logging)
		(*in).DeepCopyInto(*out)
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(ZookeeperClusterTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperClusterSpec.
func (in *ZookeeperClusterSpec) DeepCopy() *ZookeeperClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ZookeeperClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZookeeperClusterTemplate) DeepCopyInto(out *ZookeeperClusterTemplate) {
	*out = *in
	if in.Statefulset != nil {
		in, out := &in.Statefulset, &out.Statefulset
		*out = new(StatefulSetTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PodSet != nil {
		in, out := &in.PodSet, &out.PodSet
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(PodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientService != nil {
		in, out := &in.ClientService, &out.ClientService
		*out = new(InternalServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.NodesService != nil {
		in, out := &in.NodesService, &out.NodesService
		*out = new(InternalServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PersistentVolumeClaim != nil {
		in, out := &in.PersistentVolumeClaim, &out.PersistentVolumeClaim
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.PodDisruptionBudget != nil {
		in, out := &in.PodDisruptionBudget, &out.PodDisruptionBudget
		*out = new(PodDisruptionBudgetTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ZookeeperContainer != nil {
		in, out := &in.ZookeeperContainer, &out.ZookeeperContainer
		*out = new(ContainerTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.JmxSecret != nil {
		in, out := &in.JmxSecret, &out.JmxSecret
		*out = new(ResourceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZookeeperClusterTemplate.
func (in *ZookeeperClusterTemplate) DeepCopy() *ZookeeperClusterTemplate {
	if in == nil {
		return nil
	}
	out := new(ZookeeperClusterTemplate)
	in.DeepCopyInto(out)
	return out
}
